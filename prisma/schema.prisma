// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model activity_logs {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team       teams    @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_id    String   @db.Uuid
  user       users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_id    String?  @db.Uuid
  action     String
  timestamp  DateTime
  ip_address String   @db.VarChar(45)
}

model invitations {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team       teams    @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_id    String   @db.Uuid
  email      String   @db.VarChar(255)
  role       String   @db.VarChar(50)
  invited_by String   @db.Uuid
  invited_at DateTime @default(now())
  status     String   @default("pending") @db.VarChar(20)
}

model team_members {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_id   String   @db.Uuid
  team      teams    @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_id   String   @db.Uuid
  role      String   @db.VarChar(50)
  joined_at DateTime @default(now())
}

model teams {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String          @db.VarChar(100)
  created_at             DateTime        @default(now())
  updated_at             DateTime        @updatedAt
  stripe_customer_id     String?         @unique
  stripe_subscription_id String?         @unique
  stripe_product_id      String?
  plan_name              String?         @db.VarChar(50)
  subscription_status    String?         @db.VarChar(20)
  activity_logs          activity_logs[]
  invitations            invitations[]
  team_members           team_members[]
}

model users {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String?         @db.VarChar(100)
  email            String          @unique @db.VarChar(255)
  password_hash    String
  role             String          @default("member") @db.VarChar(20)
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt
  deleted_at       DateTime?
  activity_logs    activity_logs[]
  team_memberships team_members[]
}
